<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

<!-- overriding Hadoop values -->

<property>
  <name>mapred.child.java.opts</name>
  <value>-Xmx1024m</value>
</property>

<property>
  <name>mapred.compress.map.output</name>
  <value>true</value>
</property>

<property>
  <name>mapred.output.compress</name>
  <value>true</value>
</property>

<property>
  <name>hadoop.job.history.user.location</name>
  <value>${hadoop.log.dir}/history/user</value>
  <description>Hadoop 0.17.x comes with a default setting to create
     user logs inside the output path of the job. This breaks some
     Hadoop classes, which expect the output to contain only
     part-XXXXX files. This setting changes the output to a
     subdirectory of the regular log directory.
  </description>
</property>

<!-- Properties for GATE -->

<property>
  <name>gate.annotationset.input</name>
  <value></value>
  <description>Map the information at the behemoth format onto the select annotationset 
  </description>
</property>

<property>
  <name>gate.annotationset.output</name>
  <value></value>
  <description>AnnotationSet to consider when serializing to the behemoth format
  </description>
</property>

<property>
  <name>gate.annotations.filter</name>
  <value>Location,Organization,Person</value>
  <description>Annotations types to consider when serializing to the behemoth format, separated by commas 
  </description>
</property>

<property>
  <name>gate.features.filter</name>
  <value>Location.locType,Organization.orgType,Person.type</value>
  <description>if specified, only the feature listed for a type will be kept
  </description>
</property>

<property>
  <name>gate.emptyannotationset</name>
  <value>false</value>
  <description>if specified all the annotations in the Behemoth document will be deleted before processing with GATE 
  </description>
</property>

<!-- 
   Properties for SOLR Indexer 
   Follow the syntax solr.f.FIELDNAME with the Type + Feature as value. The type and features must be available from 
   the Behemoth document (see gate.annotations.filter and gate.features.filter). The corresponding SOLR fields 
   must be available in the SOLR schema and could be used for faceting. We use the dynamic field 'attr_*' from 
   the default schema in SOLR 1.4. 
   If no feature name is specified the text covered by the annotation is used as value.
-->

<property>
  <name>solr.f.attr_person</name>
  <value>Person</value>
  <description>Generates a new SOLR field 'attr_person' for each annotation of type Person found in the Behemoth document 
   and uses the text covered by the annotation as value
  </description>
</property>

<property>
  <name>solr.f.attr_location</name>
  <value>Location</value>
  <description>Generates a new SOLR field 'attr_location' for each annotation of type Location found in the Behemoth document 
   and uses the text covered by the annotation as value
  </description>
</property>

<property>
  <name>solr.f.attr_organization</name>
  <value>Organization</value>
  <description>Generates a new SOLR field 'attr_organization' for each annotation of type Organization found in the Behemoth document 
   and uses the text covered by the annotation as value
  </description>
</property>

</configuration>
